[{"content":"Now locate at the root directory of your blog site, in my case which is: ~/Repo/MyBlog\nCreate new category Name rule Before create new post, you\u0026rsquo;d better create a new category for the post(if haven\u0026rsquo;t), so you can index the post easily, the category file(_index.md) is located at content/categories/{category name}.\nI\u0026rsquo;d like to name the category with a specific rule:\nFor title field in _index.md: Each letter with a uppercase, split with space. For {category name} of directory name: Each letter with a lowercase, connect with -. And the category name below should keep the same term, the only difference should be initial case and delimiter between letters.\ntitle field in _index.md of categories should be consistent with categories field in index.md of your post. content/categories/{category name} and content/post/{category name}. Command 1 hugo new categories/{categories name}/\\_index.md Create new post Before you creare a new post, you should determine two items about your post down.\ncategory name: Which category your post belong to. title name: The title of your post. After you determine those things above, you can run command below to create a new post. The post will be created at content/post/{category name}/{title name} directory.\n1 hugo new post/{category name}/{title name}/index.md or command below:\nnote: {final title name} can override the {title name}\n1 hugo new post/{category name}/{title name}/{final title name}.md Write post After you create your new post, some field in front matter you need to finish.\ndescription: Outline of your post. slug: Last path of url when your open the past in browser. image: The head image of your post, at the same position with index.md of you post. tags: Same name rule with category. You also need to add the source of your image at the end of the post.\nPublish post Publish on github pages Using github pages to publish you post is awesome, there are some thing you need to do.\nCreate two repositories: One private for your blog site created by hugo, another public for your github pages. You can create a workflow using Github Action on your private blog repository, my gh-pages.yml is below. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 name: github pages on: push: branches: - master workflow_dispatch: jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: latest extended: true - name: Build Web run: hugo --minify - name: Deploy Web uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} EXTERNAL_REPOSITORY: loph3xertoi/loph3xertoi.github.io PUBLISH_BRANCH: master PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} Commit your post You can publish your post when you finish it, you can easily publish your post with the help of git and github. Something you need to do:\nUsing git to conduct you blog site, create two branches: master and dev, you can create some new posts in branch dev and merge to master and push your changes in master branch.\n1 2 3 4 5 6 7 8 git checkout dev # Change your current branch to dev. # Do some changes, add new post or modify existed post. git add . git commit -m\u0026#39;Some description.\u0026#39; git checkout master git merge dev git push # Make sure you have run \u0026#39;git push --set-upstream origin master:master\u0026#39; git checkout dev After you push your changes to github, post will be update automatically as Github Action.\nUpdate post Same as publish post above, you don\u0026rsquo;t need to update the lastmod field in front matter, it will be updated automatically, my .vimrc setting is below:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026#34; Define some autocmd for hugo, when modify post(*.md) in ~/Repo/MyBlog/content/post, \u0026#34; update(insert lastmod field if haven\u0026#39;t) lastmod automatically. fun LastMod() let l:frontmatter_start = search(\u0026#34;---\u0026#34;) let l:frontmatter_end = search(\u0026#34;---\u0026#34;) let l:max_frontmatter_bord = max([l:frontmatter_start, l:frontmatter_end]) let l:date_field = search(\u0026#34;^date\u0026#34;) let l:lastmod_field = search(\u0026#34;^lastmod\u0026#34;) \u0026#34; lastmod field found in front matter. if l:lastmod_field \u0026amp;\u0026amp; l:lastmod_field \u0026lt; l:max_frontmatter_bord exe \u0026#34;1,\u0026#34; . l:lastmod_field . \u0026#34;g/lastmod: /s/lastmod: .*/lastmod: \u0026#34; . strftime(\u0026#34;%FT%T%z\u0026#34;) else let l:lastmod_string = \u0026#34;lastmod: \u0026#34; . strftime(\u0026#34;%FT%T%z\u0026#34;) exe l:date_field . \u0026#34;normal! o\u0026#34; . l:lastmod_string . \u0026#34;\\\u0026lt;Esc\u0026gt;\u0026#34; endif endfun augroup myhugocmd autocmd myhugocmd BufWrite ~/Repo/MyBlog/content/post/*.md ks|call LastMod()|\u0026#39;s ","date":"2022-12-09T20:55:53+08:00","image":"https://www.loph.tk/p/workflow-post/hugo_huc6ee3c054c99eb3320a65e63aab5c167_111155_120x120_fill_box_smart1_3.png","permalink":"https://www.loph.tk/p/workflow-post/","title":"Workflow Post"},{"content":"Binary tree. aa\nPhoto by Gauri wankhade on Medium\n","date":"2022-12-07T00:00:00Z","image":"https://www.loph.tk/p/binary-tree/cover_hu87b1fd83ec397c33162f3cd23421f822_32617_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.loph.tk/p/binary-tree/","title":"Binary Tree"}]